import React from "react";
import Banner from "../../layout/Banner/Banner";
import Head from "next/head";

import style from "./news.module.scss";
import { Container, Grid } from "@mui/material";

import Link from "next/link";

const News = ({ apiData }) => {
  let imageUrl = "https://www.app.greenshift.creasion.org/storage";
  return (
    <>
      <Head>
        <title>{apiData.page_title} | GREENSHIFT NEPAL</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <meta
          property="og:image"
          content="./1a3b9e8c-88a0-449a-8c74-0f58aef99fe6.png"
        />
        <meta property="og:image:width" content="640" />
        <meta property="og:image:height" content="442" />
      </Head>

      <Banner title={apiData.banner_text} parent={"Knowledge Hub"} />

      <section className={style.newsList}>
        <Container maxWidth={"lg"}>
          <Grid container spacing={3}>
            {apiData.news.map((val, index) => {
              let link = val.title.toLowerCase().replace(/\s+/g, "-");

              return (
                <Grid item md={4} key={index}>
                  <div className={style.news_wrap}>
                    <div className={style.news_wrap_image}>
                      <img src={`${imageUrl}/${val.image}`} alt="" />
                    </div>
                    <div className={style.news_wrap_text}>
                      <h6>{val.title}</h6>

                      <span>{val.date}</span>

                      <div
                        className={style.news_wrap_text_description}
                        dangerouslySetInnerHTML={{ __html: val.text }}
                      />

                      <Link href={`/news-and-updates/${link}`}>Read More</Link>
                    </div>
                  </div>
                </Grid>
              );
            })}
          </Grid>
        </Container>
      </section>
    </>
  );
};

export const getStaticProps = async () => {
  try {
    const response = await fetch(
      "https://app.greenshift.creasion.org/api/blogs"
    );
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const apiData = await response.json();
    return {
      props: {
        apiData,
      },
      revalidate: 30,
    };
  } catch (error) {
    console.error("Error fetching data:", error.message);
    return {
      props: {
        apiData: [],
        error: error.message,
      },
      revalidate: 30,
    };
  }
};

export default News;
